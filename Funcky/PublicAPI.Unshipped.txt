#nullable enable
Funcky.Extensions.ValueWithFirst<TValue>
Funcky.Extensions.ValueWithFirst<TValue>.Deconstruct(out TValue value, out bool isFirst) -> void
Funcky.Extensions.ValueWithFirst<TValue>.IsFirst.get -> bool
Funcky.Extensions.ValueWithFirst<TValue>.Value.get -> TValue
Funcky.Extensions.ValueWithFirst<TValue>.ValueWithFirst(TValue value, bool isFirst) -> void
Funcky.Extensions.ValueWithIndex<TValue>
Funcky.Extensions.ValueWithIndex<TValue>.Deconstruct(out TValue value, out int index) -> void
Funcky.Extensions.ValueWithIndex<TValue>.Index.get -> int
Funcky.Extensions.ValueWithIndex<TValue>.Value.get -> TValue
Funcky.Extensions.ValueWithIndex<TValue>.ValueWithIndex(TValue value, int index) -> void
Funcky.Extensions.ValueWithLast<TValue>
Funcky.Extensions.ValueWithLast<TValue>.Deconstruct(out TValue value, out bool isLast) -> void
Funcky.Extensions.ValueWithLast<TValue>.IsLast.get -> bool
Funcky.Extensions.ValueWithLast<TValue>.Value.get -> TValue
Funcky.Extensions.ValueWithLast<TValue>.ValueWithLast(TValue value, bool isLast) -> void
Funcky.Monads.Option<TItem>.CompareTo(Funcky.Monads.Option<TItem> other) -> int
Funcky.Monads.Option<TItem>.CompareTo(object? obj) -> int
static Funcky.Extensions.EnumerableExtensions.WithFirst<TSource>(this System.Collections.Generic.IEnumerable<TSource>! source) -> System.Collections.Generic.IEnumerable<Funcky.Extensions.ValueWithFirst<TSource>>!
static Funcky.Extensions.EnumerableExtensions.WithIndex<TSource>(this System.Collections.Generic.IEnumerable<TSource>! source) -> System.Collections.Generic.IEnumerable<Funcky.Extensions.ValueWithIndex<TSource>>!
static Funcky.Extensions.EnumerableExtensions.WithLast<TSource>(this System.Collections.Generic.IEnumerable<TSource>! source) -> System.Collections.Generic.IEnumerable<Funcky.Extensions.ValueWithLast<TSource>>!
static Funcky.Monads.Option<TItem>.operator <(Funcky.Monads.Option<TItem> lhs, Funcky.Monads.Option<TItem> rhs) -> bool
static Funcky.Monads.Option<TItem>.operator <=(Funcky.Monads.Option<TItem> lhs, Funcky.Monads.Option<TItem> rhs) -> bool
static Funcky.Monads.Option<TItem>.operator >(Funcky.Monads.Option<TItem> lhs, Funcky.Monads.Option<TItem> rhs) -> bool
static Funcky.Monads.Option<TItem>.operator >=(Funcky.Monads.Option<TItem> lhs, Funcky.Monads.Option<TItem> rhs) -> bool
Funcky.Monads.OptionComparer<TItem>
static Funcky.Monads.OptionComparer<TItem>.Default.get -> System.Collections.Generic.Comparer<Funcky.Monads.Option<TItem>>!
static Funcky.Monads.OptionComparer<TItem>.Create(System.Comparison<TItem>! comparison) -> System.Collections.Generic.Comparer<Funcky.Monads.Option<TItem>>!
Funcky.Monads.OptionComparer
static Funcky.Monads.OptionComparer.Create<TItem>(System.Collections.Generic.IComparer<TItem>! comparer) -> System.Collections.Generic.Comparer<Funcky.Monads.Option<TItem>>!
static Funcky.Extensions.EnumerableExtensions.AverageOrNone(this System.Collections.Generic.IEnumerable<Funcky.Monads.Option<decimal>>! source) -> Funcky.Monads.Option<decimal>
static Funcky.Extensions.EnumerableExtensions.AverageOrNone(this System.Collections.Generic.IEnumerable<Funcky.Monads.Option<double>>! source) -> Funcky.Monads.Option<double>
static Funcky.Extensions.EnumerableExtensions.AverageOrNone(this System.Collections.Generic.IEnumerable<Funcky.Monads.Option<float>>! source) -> Funcky.Monads.Option<float>
static Funcky.Extensions.EnumerableExtensions.AverageOrNone(this System.Collections.Generic.IEnumerable<Funcky.Monads.Option<int>>! source) -> Funcky.Monads.Option<double>
static Funcky.Extensions.EnumerableExtensions.AverageOrNone(this System.Collections.Generic.IEnumerable<Funcky.Monads.Option<long>>! source) -> Funcky.Monads.Option<double>
static Funcky.Extensions.EnumerableExtensions.AverageOrNone(this System.Collections.Generic.IEnumerable<decimal>! source) -> Funcky.Monads.Option<decimal>
static Funcky.Extensions.EnumerableExtensions.AverageOrNone(this System.Collections.Generic.IEnumerable<double>! source) -> Funcky.Monads.Option<double>
static Funcky.Extensions.EnumerableExtensions.AverageOrNone(this System.Collections.Generic.IEnumerable<float>! source) -> Funcky.Monads.Option<float>
static Funcky.Extensions.EnumerableExtensions.AverageOrNone(this System.Collections.Generic.IEnumerable<int>! source) -> Funcky.Monads.Option<double>
static Funcky.Extensions.EnumerableExtensions.AverageOrNone(this System.Collections.Generic.IEnumerable<long>! source) -> Funcky.Monads.Option<double>
static Funcky.Extensions.EnumerableExtensions.AverageOrNone<TSource>(this System.Collections.Generic.IEnumerable<TSource>! source, System.Func<TSource, Funcky.Monads.Option<decimal>>! selector) -> Funcky.Monads.Option<decimal>
static Funcky.Extensions.EnumerableExtensions.AverageOrNone<TSource>(this System.Collections.Generic.IEnumerable<TSource>! source, System.Func<TSource, Funcky.Monads.Option<double>>! selector) -> Funcky.Monads.Option<double>
static Funcky.Extensions.EnumerableExtensions.AverageOrNone<TSource>(this System.Collections.Generic.IEnumerable<TSource>! source, System.Func<TSource, Funcky.Monads.Option<float>>! selector) -> Funcky.Monads.Option<float>
static Funcky.Extensions.EnumerableExtensions.AverageOrNone<TSource>(this System.Collections.Generic.IEnumerable<TSource>! source, System.Func<TSource, Funcky.Monads.Option<int>>! selector) -> Funcky.Monads.Option<double>
static Funcky.Extensions.EnumerableExtensions.AverageOrNone<TSource>(this System.Collections.Generic.IEnumerable<TSource>! source, System.Func<TSource, Funcky.Monads.Option<long>>! selector) -> Funcky.Monads.Option<double>
static Funcky.Extensions.EnumerableExtensions.AverageOrNone<TSource>(this System.Collections.Generic.IEnumerable<TSource>! source, System.Func<TSource, decimal>! selector) -> Funcky.Monads.Option<decimal>
static Funcky.Extensions.EnumerableExtensions.AverageOrNone<TSource>(this System.Collections.Generic.IEnumerable<TSource>! source, System.Func<TSource, double>! selector) -> Funcky.Monads.Option<double>
static Funcky.Extensions.EnumerableExtensions.AverageOrNone<TSource>(this System.Collections.Generic.IEnumerable<TSource>! source, System.Func<TSource, float>! selector) -> Funcky.Monads.Option<float>
static Funcky.Extensions.EnumerableExtensions.AverageOrNone<TSource>(this System.Collections.Generic.IEnumerable<TSource>! source, System.Func<TSource, int>! selector) -> Funcky.Monads.Option<double>
static Funcky.Extensions.EnumerableExtensions.AverageOrNone<TSource>(this System.Collections.Generic.IEnumerable<TSource>! source, System.Func<TSource, long>! selector) -> Funcky.Monads.Option<double>
static Funcky.Extensions.EnumerableExtensions.MaxOrNone(this System.Collections.Generic.IEnumerable<Funcky.Monads.Option<decimal>>! source) -> Funcky.Monads.Option<decimal>
static Funcky.Extensions.EnumerableExtensions.MaxOrNone(this System.Collections.Generic.IEnumerable<Funcky.Monads.Option<double>>! source) -> Funcky.Monads.Option<double>
static Funcky.Extensions.EnumerableExtensions.MaxOrNone(this System.Collections.Generic.IEnumerable<Funcky.Monads.Option<float>>! source) -> Funcky.Monads.Option<float>
static Funcky.Extensions.EnumerableExtensions.MaxOrNone(this System.Collections.Generic.IEnumerable<Funcky.Monads.Option<int>>! source) -> Funcky.Monads.Option<int>
static Funcky.Extensions.EnumerableExtensions.MaxOrNone(this System.Collections.Generic.IEnumerable<Funcky.Monads.Option<long>>! source) -> Funcky.Monads.Option<long>
static Funcky.Extensions.EnumerableExtensions.MaxOrNone(this System.Collections.Generic.IEnumerable<decimal>! source) -> Funcky.Monads.Option<decimal>
static Funcky.Extensions.EnumerableExtensions.MaxOrNone(this System.Collections.Generic.IEnumerable<double>! source) -> Funcky.Monads.Option<double>
static Funcky.Extensions.EnumerableExtensions.MaxOrNone(this System.Collections.Generic.IEnumerable<float>! source) -> Funcky.Monads.Option<float>
static Funcky.Extensions.EnumerableExtensions.MaxOrNone(this System.Collections.Generic.IEnumerable<int>! source) -> Funcky.Monads.Option<int>
static Funcky.Extensions.EnumerableExtensions.MaxOrNone(this System.Collections.Generic.IEnumerable<long>! source) -> Funcky.Monads.Option<long>
static Funcky.Extensions.EnumerableExtensions.MaxOrNone<TSource, TResult>(this System.Collections.Generic.IEnumerable<TSource>! source, System.Func<TSource, Funcky.Monads.Option<TResult>>! selector) -> Funcky.Monads.Option<TResult>
static Funcky.Extensions.EnumerableExtensions.MaxOrNone<TSource, TResult>(this System.Collections.Generic.IEnumerable<TSource>! source, System.Func<TSource, TResult>! selector) -> Funcky.Monads.Option<TResult>
static Funcky.Extensions.EnumerableExtensions.MaxOrNone<TSource>(this System.Collections.Generic.IEnumerable<Funcky.Monads.Option<TSource>>! source) -> Funcky.Monads.Option<TSource>
static Funcky.Extensions.EnumerableExtensions.MaxOrNone<TSource>(this System.Collections.Generic.IEnumerable<TSource>! source) -> Funcky.Monads.Option<TSource>
static Funcky.Extensions.EnumerableExtensions.MaxOrNone<TSource>(this System.Collections.Generic.IEnumerable<TSource>! source, System.Func<TSource, Funcky.Monads.Option<decimal>>! selector) -> Funcky.Monads.Option<decimal>
static Funcky.Extensions.EnumerableExtensions.MaxOrNone<TSource>(this System.Collections.Generic.IEnumerable<TSource>! source, System.Func<TSource, Funcky.Monads.Option<double>>! selector) -> Funcky.Monads.Option<double>
static Funcky.Extensions.EnumerableExtensions.MaxOrNone<TSource>(this System.Collections.Generic.IEnumerable<TSource>! source, System.Func<TSource, Funcky.Monads.Option<float>>! selector) -> Funcky.Monads.Option<float>
static Funcky.Extensions.EnumerableExtensions.MaxOrNone<TSource>(this System.Collections.Generic.IEnumerable<TSource>! source, System.Func<TSource, Funcky.Monads.Option<int>>! selector) -> Funcky.Monads.Option<int>
static Funcky.Extensions.EnumerableExtensions.MaxOrNone<TSource>(this System.Collections.Generic.IEnumerable<TSource>! source, System.Func<TSource, Funcky.Monads.Option<long>>! selector) -> Funcky.Monads.Option<long>
static Funcky.Extensions.EnumerableExtensions.MaxOrNone<TSource>(this System.Collections.Generic.IEnumerable<TSource>! source, System.Func<TSource, decimal>! selector) -> Funcky.Monads.Option<decimal>
static Funcky.Extensions.EnumerableExtensions.MaxOrNone<TSource>(this System.Collections.Generic.IEnumerable<TSource>! source, System.Func<TSource, double>! selector) -> Funcky.Monads.Option<double>
static Funcky.Extensions.EnumerableExtensions.MaxOrNone<TSource>(this System.Collections.Generic.IEnumerable<TSource>! source, System.Func<TSource, float>! selector) -> Funcky.Monads.Option<float>
static Funcky.Extensions.EnumerableExtensions.MaxOrNone<TSource>(this System.Collections.Generic.IEnumerable<TSource>! source, System.Func<TSource, int>! selector) -> Funcky.Monads.Option<int>
static Funcky.Extensions.EnumerableExtensions.MaxOrNone<TSource>(this System.Collections.Generic.IEnumerable<TSource>! source, System.Func<TSource, long>! selector) -> Funcky.Monads.Option<long>
static Funcky.Extensions.EnumerableExtensions.MinOrNone(this System.Collections.Generic.IEnumerable<Funcky.Monads.Option<decimal>>! source) -> Funcky.Monads.Option<decimal>
static Funcky.Extensions.EnumerableExtensions.MinOrNone(this System.Collections.Generic.IEnumerable<Funcky.Monads.Option<double>>! source) -> Funcky.Monads.Option<double>
static Funcky.Extensions.EnumerableExtensions.MinOrNone(this System.Collections.Generic.IEnumerable<Funcky.Monads.Option<float>>! source) -> Funcky.Monads.Option<float>
static Funcky.Extensions.EnumerableExtensions.MinOrNone(this System.Collections.Generic.IEnumerable<Funcky.Monads.Option<int>>! source) -> Funcky.Monads.Option<int>
static Funcky.Extensions.EnumerableExtensions.MinOrNone(this System.Collections.Generic.IEnumerable<Funcky.Monads.Option<long>>! source) -> Funcky.Monads.Option<long>
static Funcky.Extensions.EnumerableExtensions.MinOrNone(this System.Collections.Generic.IEnumerable<decimal>! source) -> Funcky.Monads.Option<decimal>
static Funcky.Extensions.EnumerableExtensions.MinOrNone(this System.Collections.Generic.IEnumerable<double>! source) -> Funcky.Monads.Option<double>
static Funcky.Extensions.EnumerableExtensions.MinOrNone(this System.Collections.Generic.IEnumerable<float>! source) -> Funcky.Monads.Option<float>
static Funcky.Extensions.EnumerableExtensions.MinOrNone(this System.Collections.Generic.IEnumerable<int>! source) -> Funcky.Monads.Option<int>
static Funcky.Extensions.EnumerableExtensions.MinOrNone(this System.Collections.Generic.IEnumerable<long>! source) -> Funcky.Monads.Option<long>
static Funcky.Extensions.EnumerableExtensions.MinOrNone<TSource, TResult>(this System.Collections.Generic.IEnumerable<TSource>! source, System.Func<TSource, Funcky.Monads.Option<TResult>>! selector) -> Funcky.Monads.Option<TResult>
static Funcky.Extensions.EnumerableExtensions.MinOrNone<TSource, TResult>(this System.Collections.Generic.IEnumerable<TSource>! source, System.Func<TSource, TResult>! selector) -> Funcky.Monads.Option<TResult>
static Funcky.Extensions.EnumerableExtensions.MinOrNone<TSource>(this System.Collections.Generic.IEnumerable<Funcky.Monads.Option<TSource>>! source) -> Funcky.Monads.Option<TSource>
static Funcky.Extensions.EnumerableExtensions.MinOrNone<TSource>(this System.Collections.Generic.IEnumerable<TSource>! source) -> Funcky.Monads.Option<TSource>
static Funcky.Extensions.EnumerableExtensions.MinOrNone<TSource>(this System.Collections.Generic.IEnumerable<TSource>! source, System.Func<TSource, Funcky.Monads.Option<decimal>>! selector) -> Funcky.Monads.Option<decimal>
static Funcky.Extensions.EnumerableExtensions.MinOrNone<TSource>(this System.Collections.Generic.IEnumerable<TSource>! source, System.Func<TSource, Funcky.Monads.Option<double>>! selector) -> Funcky.Monads.Option<double>
static Funcky.Extensions.EnumerableExtensions.MinOrNone<TSource>(this System.Collections.Generic.IEnumerable<TSource>! source, System.Func<TSource, Funcky.Monads.Option<float>>! selector) -> Funcky.Monads.Option<float>
static Funcky.Extensions.EnumerableExtensions.MinOrNone<TSource>(this System.Collections.Generic.IEnumerable<TSource>! source, System.Func<TSource, Funcky.Monads.Option<int>>! selector) -> Funcky.Monads.Option<int>
static Funcky.Extensions.EnumerableExtensions.MinOrNone<TSource>(this System.Collections.Generic.IEnumerable<TSource>! source, System.Func<TSource, Funcky.Monads.Option<long>>! selector) -> Funcky.Monads.Option<long>
static Funcky.Extensions.EnumerableExtensions.MinOrNone<TSource>(this System.Collections.Generic.IEnumerable<TSource>! source, System.Func<TSource, decimal>! selector) -> Funcky.Monads.Option<decimal>
static Funcky.Extensions.EnumerableExtensions.MinOrNone<TSource>(this System.Collections.Generic.IEnumerable<TSource>! source, System.Func<TSource, double>! selector) -> Funcky.Monads.Option<double>
static Funcky.Extensions.EnumerableExtensions.MinOrNone<TSource>(this System.Collections.Generic.IEnumerable<TSource>! source, System.Func<TSource, float>! selector) -> Funcky.Monads.Option<float>
static Funcky.Extensions.EnumerableExtensions.MinOrNone<TSource>(this System.Collections.Generic.IEnumerable<TSource>! source, System.Func<TSource, int>! selector) -> Funcky.Monads.Option<int>
static Funcky.Extensions.EnumerableExtensions.MinOrNone<TSource>(this System.Collections.Generic.IEnumerable<TSource>! source, System.Func<TSource, long>! selector) -> Funcky.Monads.Option<long>
